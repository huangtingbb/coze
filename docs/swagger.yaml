basePath: /api/v1
definitions:
  controllers.AuthResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  controllers.CreateAgentRequest:
    properties:
      avatar:
        type: string
      config:
        type: string
      description:
        type: string
      name:
        type: string
      prompt:
        type: string
    required:
    - name
    type: object
  controllers.CreateConversationRequest:
    properties:
      agent_id:
        type: integer
      title:
        type: string
    required:
    - agent_id
    type: object
  controllers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.RegisterRequest:
    properties:
      email:
        type: string
      nickname:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  controllers.SendMessageRequest:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  controllers.UpdateProfileRequest:
    properties:
      avatar:
        type: string
      nickname:
        type: string
    type: object
  models.User:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      nickname:
        type: string
      role:
        description: 1:普通用户 2:管理员
        type: integer
      status:
        description: 1:正常 0:禁用
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
  utils.PageResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  utils.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 基于Gin框架的Coze Agent中台微服务系统
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Coze Agent Platform API
  version: "1.0"
paths:
  /agents:
    get:
      consumes:
      - application/json
      description: 获取当前用户的Agent列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.PageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取Agent列表
      tags:
      - Agent
    post:
      consumes:
      - application/json
      description: 创建新的AI Agent
      parameters:
      - description: Agent信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateAgentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建Agent
      tags:
      - Agent
  /agents/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的Agent
      parameters:
      - description: Agent ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除Agent
      tags:
      - Agent
    get:
      consumes:
      - application/json
      description: 根据ID获取Agent详细信息
      parameters:
      - description: Agent ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取Agent详情
      tags:
      - Agent
    put:
      consumes:
      - application/json
      description: 更新Agent信息
      parameters:
      - description: Agent ID
        in: path
        name: id
        required: true
        type: integer
      - description: Agent信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateAgentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新Agent
      tags:
      - Agent
  /auth/login:
    post:
      consumes:
      - application/json
      description: 用户登录获取JWT token
      parameters:
      - description: 登录信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/controllers.AuthResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 用户登录
      tags:
      - 认证
  /auth/register:
    post:
      consumes:
      - application/json
      description: 用户注册新账户
      parameters:
      - description: 注册信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/controllers.AuthResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 用户注册
      tags:
      - 认证
  /conversations:
    get:
      consumes:
      - application/json
      description: 获取当前用户的对话列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.PageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取对话列表
      tags:
      - 对话
    post:
      consumes:
      - application/json
      description: 创建新的对话会话
      parameters:
      - description: 对话信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateConversationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建对话
      tags:
      - 对话
  /conversations/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的对话
      parameters:
      - description: 对话ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除对话
      tags:
      - 对话
    get:
      consumes:
      - application/json
      description: 根据ID获取对话详细信息
      parameters:
      - description: 对话ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取对话详情
      tags:
      - 对话
  /conversations/{id}/messages:
    get:
      consumes:
      - application/json
      description: 获取指定对话的消息列表
      parameters:
      - description: 对话ID
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.PageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取消息列表
      tags:
      - 消息
    post:
      consumes:
      - application/json
      description: 向指定对话发送消息
      parameters:
      - description: 对话ID
        in: path
        name: id
        required: true
        type: integer
      - description: 消息内容
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.SendMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 发送消息
      tags:
      - 消息
  /coze/token:
    get:
      consumes:
      - application/json
      description: 获取Coze API的访问令牌
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 获取Coze访问令牌
      tags:
      - Coze
  /users/profile:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的资料信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户资料
      tags:
      - 用户
    put:
      consumes:
      - application/json
      description: 更新当前登录用户的资料信息
      parameters:
      - description: 用户资料
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新用户资料
      tags:
      - 用户
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
